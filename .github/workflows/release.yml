name: release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build-${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            rust: stable
          - platform: ubuntu-latest
            rust: stable
          - platform: windows-latest
            rust: stable
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_type == 'tag' }}

      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked

      - name: Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Build release
        env:
          CI: true
        run: |
          cargo tauri build --ci

      - name: Collect artifacts (macOS)
        if: runner.os == 'macOS'
        run: |
          mkdir -p artifacts
          shopt -s globstar nullglob
          cp -R target/release/bundle/**/MathImage*.dmg artifacts/ || true
          cp -R target/release/bundle/**/MathImage*.app artifacts/ || true
          cp -R target/release/bundle/**/MathImage*.* artifacts/ || true

      - name: Collect artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          Get-ChildItem -Recurse -Path target\release\bundle | Where-Object { $_.Name -match 'MathImage' } | Copy-Item -Destination artifacts -Recurse -Force -ErrorAction SilentlyContinue

      - name: Collect artifacts (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p artifacts
          cp -R target/release/bundle/**/MathImage* artifacts/ || true

      - name: Upload artifacts (per-OS)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*-artifacts"
          merge-multiple: true

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *
            **/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

